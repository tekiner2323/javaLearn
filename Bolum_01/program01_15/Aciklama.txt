

Bu uygulamada java'da değişkenleri görecez ve tanımlamalarını görecez. Öncelikle Matematiksel değişkenlerden başlayacağım. Sonrasıda ise sözel olan değişkenleri anlatacağım. Uygulamada ise bunlaın kullanımını göstereceğim.

TAM SAYI DEĞİŞKEN TÜRÜ:

int ve Integer (yazım şekli önemlidir) tam sayıları saklamak için kullanılırlar. int temel değişken türü iken Integer java'ya özel olarak yazılmış bir nesnedir. 

int a = 6;
Integer b = new Integer(6); 

şeklinde tanımlanırlar. int değişkeni hafızada 32 bitlik yer alırken Integer daha uzun ve büyük hafızada yer saklar. Kullanım noktalarında hiç bir fark yoktur. 


temel değişkenlerde:
	byte 	-128 <> +127			unsigned byte 		0 <> 256
	short	-32768 <> 32757			unsignet short 		0 <> 65526
	int		-2^31 <> 2^31 -1		unsignet int 		0 <> 2^64
	long	-2^64 <> 2^64 -1		unsignet long		0 <> 2^128
şeklinde tanımlama aralıklarına sahiplerdir. Dolayısıyla hepsinin hafızada aldıkları alanlar birbirinden farklı olacaktır. İhtiyaca göre değişken tanımlamak hafıza(ram) yönetimi konusunda oldukça önemlidir.	


GERÇEK SAYI DEĞİŞKENLERİ

float, double, long double	:	Temel değişkenler
Float, Double 			   	:	Nesnesel değişlenler	

Yapacağımız işlemlerde ondalıklı sayılar ile işlemler yapmamız gerektiğinde başvuracağımız değişken çeşitleridir. float, double'ye göre daha az hassasiyete sahiptir. Yada başka bir değişle çok hassas işlemlerin yapacaksak ve onları saklayacaksak double tercih edilmelidir. 

doube mdouble = 22.1354e-17   22.1353x10^-17 demektir. 


temel değişkenler == ile kontrol edilebilirken Nesnesel değişkenler == ile kontrol edilemezler !!! bu noktada dikkat etmek gerekir. 

Nesnesel değişkenler eguals metodu ile kontrol edilirler
ör:
	Double a=10.0;
	Double b=10.0;
	System.out.println(a==b); //Bu seçenek false cevabı verecektir.
	System.out.println(a.equals(b)); //Bu seçenek doğru olanı verecektir. 


MANTIK (Doğru Yanlış) DEĞİŞKENİ

Bazı ifadelerin iki cevabı vardır. "Var - Evet - Doğru " veya "Yok - Hayır- Yanlış " bunları ifade etmek için 

boolean: temel değişken
Boolean: Nesnesel değişken

Kullanılır.

boolean torf=fale;
Boolean torf2= new Boolean (false);

şekinde tanımlanır.



KARAKTER DEĞİŞKEN TÜRÜ

char değişken tipidir. Sadece 1 adet karakter saklayabilir. Çeşitli alanlarda kullanılabilir.  iki adet tek tırnak(') içerinde ifade edilir. İfade belirtilirken tek tırnaklar içerisine karakter direkt olarak yazılabilir veya unicode'si yazılabilir. 

char c1= 'a';		
char c2='\u0041';		//unicode kullanarak tanımalma yapılması.


METİNSEL DEĞİŞKEN TÜRÜ

Javada sadede String ifade türü sadece nesnesel değişken türü olup ilkel ifadesi direkt olarak yoktur. Aslında String ifadesi bir çeşit char dizisidir. (Dizilere ileride bakacağız.) String'in kendisine haz bazı metotlarıda vardır. 

Double ve double da anlattığımız farktan ötürü direkt olarka iki string birbiri ile kıyaslanmaz. Bunu için hazırlanmış olan equals metodu kullanılmalıdır.

String mString1="Eruğrul";
String mString2= new String ("Tekin"); 

yapısal olarak aynıdır. 

Stringler'de de bir çok işlem yapılabilmektedir. 




ARİTMETİK İŞLEMLER

	Her zaman her yerde bizimle birlikte olaran aritmetik burada tabiki bizimle olacaktır. Bir problemi çözerken her zaman matematiği kullandığımız gibi program yaparkende kullanacağız. 
	
	Java dilinde bize hazır olarak gelen hali hazırda temel aritmetik işlemler bulunmaktadır:
		+ Toplama
		- Çıkarma
		* Çarpma
		/ Bölme
		% Mod Alma (a/b işlemindeki kalanı söyler)


Temel aritmetik işlemlerin haricinde bir çok matematiksel fonksiyon vardır. Kısaca örnek verecek olursak üs alma, karekökten çıkarma, logaritma, trigonometri... gibi bunların ise hali hazırda bir çok fonksiyonu vardır. Fonksiyonlarla kullanılıp hesaplanırlar. 


	Birde hızlı aritmetiksel işlemler vardır. 
	degisken++; //Bir ilave et
	degisken--; // Bir eksilt
	degisken+=3 // değişken = değişken + 3 demektir Yani değişkenimiz işlem öncesinde 5 olduğunu varsayarsak işlem 5=5+3 olacaktır matematiksel olarak mantıksız gelsede kodlamada her zaman sol taraf sağ tarafın değerini alır. yani işlem sonucunda degisken=8 olacaktır.
	degisken-=3;
	degisken*=3;
	degisken/=3;
	degisken%=3;
	
	++degisken ve degisken++ birbirinden farklıdır
	
	int a=5;
	int c;
	int d;
	
	c=a++;
	d=++a;
	
	bu durumda 
		c=5;
		d=7 olur :)
		Neden mi c'nin ataması yapılırken önce a'yı c'ye atadı. Sonra a'nın değerini bir arttırdı. Böylece a bu anda 6 oldu. Sonrasında d'nin atamasını yapmadan önce a'yı bir arttırdı. Böylece a 7 oldu ve son değeri d'ye atadı. Böylece d ise 7 olmuş oldu. 



























